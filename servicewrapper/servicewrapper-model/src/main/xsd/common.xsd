<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema targetNamespace="gme://Taverna-caGrid.caBIG/1.0/uk.org.mygrid.cagrid.domain.common" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:common="gme://Taverna-caGrid.caBIG/1.0/uk.org.mygrid.cagrid.domain.common" xmlns:ncbiblast="gme://Taverna-caGrid.caBIG/1.0/uk.org.mygrid.cagrid.domain.ncbiblast" xmlns:valuedomains="gme://Taverna-caGrid.caBIG/1.0/uk.org.mygrid.cagrid.valuedomains" elementFormDefault="qualified">
	<xsd:import namespace="gme://Taverna-caGrid.caBIG/1.0/uk.org.mygrid.cagrid.valuedomains" schemaLocation="valuedomains.xsd"/>
	<xsd:import namespace="gme://Taverna-caGrid.caBIG/1.0/uk.org.mygrid.cagrid.domain.ncbiblast" schemaLocation="ncbiblast.xsd"/>
	<xsd:element name="ProteinSequenceFASTA" type="common:ProteinSequenceFASTA"/>
	<xsd:complexType name="ProteinSequenceFASTA">
		<xsd:annotation>
			<xsd:documentation>FASTA-formatted protein sequence.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="common:ProteinSequenceRepresentation">
				<xsd:sequence>
					<xsd:element name="sequence" type="xsd:string" minOccurs="1" maxOccurs="1">
						<xsd:annotation>
							<xsd:documentation>FASTA-formatted protein sequence.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="ProteinSequenceRepresentation" type="common:ProteinSequenceRepresentation"/>
	<xsd:complexType name="ProteinSequenceRepresentation" abstract="true">
		<xsd:annotation>
			<xsd:documentation>An abstract class that represents a protein. It has two concrete subclasses: (1) FASTAProteinSequence to represent the case where the actual protein sequence is known and being passed, and (2) ProteinSequenceIdentifier (in format db:id) to represent the case where the sequence identified in a certain database is given and the sequence has first to be fetched from a protein database (such as uniprot) before the InterProScan or BLAST search can be performed on that sequence. </xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="common:SequenceRepresentation">
				<xsd:sequence/>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="NucleotideSequenceFASTA" type="common:NucleotideSequenceFASTA"/>
	<xsd:complexType name="NucleotideSequenceFASTA">
		<xsd:annotation>
			<xsd:documentation>FASTA-formatted nucleotide sequence.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="common:NucleotideSequenceRepresentation">
				<xsd:sequence>
					<xsd:element name="sequence" type="xsd:string" minOccurs="1" maxOccurs="1">
						<xsd:annotation>
							<xsd:documentation>FASTA-formatted nucleotide sequence.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="SequenceDatabase" type="common:SequenceDatabase"/>
	<xsd:complexType name="SequenceDatabase">
		<xsd:sequence>
			<xsd:element name="databaseID" type="xsd:string" minOccurs="1" maxOccurs="1"/>
			<xsd:element name="description" type="xsd:string" minOccurs="0" maxOccurs="1"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:element name="ProteinSequenceDatabase" type="common:ProteinSequenceDatabase"/>
	<xsd:complexType name="ProteinSequenceDatabase">
		<xsd:complexContent>
			<xsd:extension base="common:SequenceDatabase">
				<xsd:sequence/>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="JobID" type="common:JobID"/>
	<xsd:complexType name="JobID">
		<xsd:sequence>
			<xsd:element name="jobID" type="xsd:string" minOccurs="1" maxOccurs="1"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:element name="NucleotideSequenceRepresentation" type="common:NucleotideSequenceRepresentation"/>
	<xsd:complexType name="NucleotideSequenceRepresentation" abstract="true">
		<xsd:annotation>
			<xsd:documentation>An abstract class that represents a nucleotide. It has two concrete subclasses: (1) FASTANucleotideSequence to represent the case where the actual protein sequence is known and being passed, and (2) NucleotideSequenceIdentifier (in format db:id) to represent the case where the sequence identified in a certain database is given and the sequence has first to be fetched from a nucleotide database (such as ncbi) before the BLAST search can be performed on that sequence. </xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="common:SequenceRepresentation">
				<xsd:sequence/>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="ProteinSequenceDatabaseIdentifier" type="common:ProteinSequenceDatabaseIdentifier"/>
	<xsd:complexType name="ProteinSequenceDatabaseIdentifier">
		<xsd:annotation>
			<xsd:documentation>Protein identifier in format 'database:id'.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="common:ProteinSequenceRepresentation">
				<xsd:sequence>
					<xsd:element name="sequenceID" type="xsd:string" minOccurs="1" maxOccurs="1"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="NucleotideSequenceDatabaseIdentifier" type="common:NucleotideSequenceDatabaseIdentifier"/>
	<xsd:complexType name="NucleotideSequenceDatabaseIdentifier">
		<xsd:annotation>
			<xsd:documentation>Nucleotide identifier in format 'database:id'.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="common:NucleotideSequenceRepresentation">
				<xsd:sequence>
					<xsd:element name="sequenceID" type="xsd:string" minOccurs="1" maxOccurs="1"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="SequenceRepresentation" type="common:SequenceRepresentation"/>
	<xsd:complexType name="SequenceRepresentation" abstract="true">
		<xsd:annotation>
			<xsd:documentation>Abstract class to represent a protein or nucleotide.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence/>
	</xsd:complexType>
	<xsd:simpleType name="JobStatus">
		<xsd:list itemType="valuedomains:JobStatus"/>
	</xsd:simpleType>
	<xsd:element name="NucleotideSequenceDatabase" type="common:NucleotideSequenceDatabase"/>
	<xsd:complexType name="NucleotideSequenceDatabase">
		<xsd:complexContent>
			<xsd:extension base="common:SequenceDatabase">
				<xsd:sequence/>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
</xsd:schema>
